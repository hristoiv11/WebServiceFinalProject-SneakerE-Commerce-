services:

  api-gateway:
    build: api-gateway
    hostname: api-gateway
    container_name: api-gateway
    #ports:
      #- "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - purchases-service
      - inventory-service
      - customers-service
      - sneakers-service

  customers-service:
    build: customers-service
    hostname: customers-service
    container_name: customers-service

    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mysql1:
        condition: service_healthy

  inventory-service:
    build: inventory-service
    hostname: inventory-service
    #container_name: inventory-service

    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      #mysql1:
      postgres1:
        condition: service_healthy

  sneakers-service:
    build: sneakers-service
    hostname: sneakers-service
    container_name: sneakers-service

    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mysql1:
        condition: service_healthy

  purchases-service:
    build: purchases-service
    hostname: purchases-service
    container_name: purchases-service

    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongodb
      - inventory-service
      - customers-service
      - sneakers-service

  mysql1:
    image: mysql:5.7
    ports:
      - "3308:3307"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpwd
      - MYSQL_DATABASE=customers-db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pwd
    volumes:
      - ./data/mysql1:/var/lib/mysql1
      - ./data/init.d:/docker-entrypoint-initdb.d
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-uuser",
          "-ppwd",
          "-h",
          "localhost",
        ]
      interval: 10s
      timeout: 5s
      retries: 10

  phpmyadmin1:
    image: phpmyadmin:5.2.0
    container_name: phpmyadmin1
    links:
      - mysql1
    restart: always
    ports:
      - 5013:80
    environment:
      - PMA_ARBITRARY=1


  #mysql2:
    # image: mysql:5.7
      #ports:
      # - "3309:3307"
      #environment:
      # - MYSQL_ROOT_PASSWORD=rootpwd
      # - MYSQL_DATABASE=inventory-db
      # - MYSQL_USER=user
      # - MYSQL_PASSWORD=pwd
      # volumes:
      #  - ./data/mysql2:/var/lib/mysql2
    #  - ./data/init.d:/docker-entrypoint-initdb.d
      # healthcheck:
        #  test:
        # [
        # "CMD",
        # "mysqladmin",
        # "ping",
        #  "-uuser",
        #  "-ppwd",
        #  "-h",
        #  "localhost",
      # ]
      # interval: 10s
      # timeout: 5s
      # retries: 10

    # phpmyadmin2:
    #image: phpmyadmin:5.2.0
    #container_name: phpmyadmin2
      # links:
      # - mysql2
    #restart: always
      #ports:
      # - 5014:80
      #environment:
      # - PMA_ARBITRARY=1


  postgres1:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - PGUSER=user
      - POSTGRES_PASSWORD=pwd
      - POSTGRES_DB=inventory-db
    healthcheck:
      test: "pg_isready -h postgres1"
      interval: 10s
      timeout: 5s
      retries: 10

  pgadmin1:
      image: dpage/pgadmin4:latest
      container_name: pgadmin1
      restart: always
      ports:
        - 9000:80
      environment:
        - PGADMIN_DEFAULT_EMAIL=admin@ivanov.com
        - PGADMIN_DEFAULT_PASSWORD=admin
      depends_on:
        - postgres1


  mysql3:
    image: mysql:5.7
    ports:
      - "3310:3307"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpwd
      - MYSQL_DATABASE=sneakers-db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pwd
    volumes:
      - ./data/mysql3:/var/lib/mysql3
      - ./data/init.d:/docker-entrypoint-initdb.d
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-uuser",
          "-ppwd",
          "-h",
          "localhost",
        ]
      interval: 10s
      timeout: 5s
      retries: 10

  phpmyadmin3:
    image: phpmyadmin:5.2.0
    container_name: phpmyadmin3
    links:
      - mysql3
    restart: always
    ports:
      - 5015:80
    environment:
      - PMA_ARBITRARY=1

  mongodb:
    image: mongo
    container_name: mongo_db
    hostname: mongo_db
    volumes:
      - mongo:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pwd

  mongo-express:
    image: mongo-express
    container_name: mongo_express
    hostname: mongo_express
    restart: always
    ports:
      - 8085:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ADMINUSERNAME=user
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pwd
      - ME_CONFIG_MONGODB_URL=mongodb://admin:pass@mongodb:27017

volumes:
    mongo: {}